version: '3'
services:
  # Peer Discovery API
  discovery-api:
    container_name: discovery-api
    restart: unless-stopped
    build: ./discovery-api
    ports:
      - "5000:5000"
      - "53:53/udp"
    volumes:
      - discovery_data:/app/data
    networks:
      - default
    cap_add:
      - NET_BIND_SERVICE

  wireguard-webadmin:
    container_name: wireguard-webadmin
    restart: unless-stopped
    #image: deeg87/wireguard_webadmin:latest
    build: .
    environment:
      - SERVER_ADDRESS=${SERVER_ADDRESS}
      - DEBUG_MODE=True
      - COMPOSE_VERSION=02r
      - SECURE_PROXY_SSL_HEADER=HTTP_X_FORWARDED_PROTO,https
      - TZ=${TIMEZONE}
      - EXTRA_ALLOWED_HOSTS=${EXTRA_ALLOWED_HOSTS}
    volumes:
      - .:/app
      - ./src:/app/src
      - ./accounts:/app/accounts
      - ./templates:/app/templates
      - ./static:/app/static
      - wireguard:/etc/wireguard
      - static_volume:/app_static_files/
      - app_secrets:/app_secrets/
      - rrd_data:/rrd_data/
      - database_data:/app/database/
    ports:
      # Do not directly expose the Django port to the internet, use some kind of reverse proxy with SSL.
      - "127.0.0.1:8000:8000"
      # Warning: Docker will have a hard time handling large amount of ports. Expose only the ports that you need.
      # Ports for multiple WireGuard instances. (Probably, you just need one)
      - "51820-51839:51820-51839/udp"
      # Ports for port forwarding rules. Add your own ports here if you need them.
      #- "8080-8089:8080-8089/tcp"
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv4.ip_forward=1
    command: /bin/bash /app/init.sh
 #   command: ["python", "manage.py", "runserver", "0.0.0.0:8000"]    
    networks:
      - default
 #     - caddy_shared_net

  wireguard-webadmin-cron:
    container_name: wireguard-webadmin-cron
    restart: unless-stopped
    image: eduardosilva/wireguard_webadmin_cron:latest
    environment:
       - TZ=${TIMEZONE}
    depends_on:
      - wireguard-webadmin

  wireguard-webadmin-rrdtool:
    container_name: wireguard-webadmin-rrdtool
    restart: unless-stopped
    image: eduardosilva/wireguard_webadmin_rrdtool:latest
    volumes:
      - app_secrets:/app_secrets/
      - rrd_data:/rrd_data/
    environment:
      - TZ=${TIMEZONE}
    depends_on:
      - wireguard-webadmin


volumes:
  static_volume:
  wireguard:
  app_secrets:
  rrd_data:
  database_data:
  discovery_data:
#networks:
#  caddy_shared_net:
#    external: true