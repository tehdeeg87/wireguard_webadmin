# Generated by Django 4.2.24 on 2025-10-14 14:44

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('wireguard', '0032_update_default_dns_servers'),
        ('dns', '0004_dnsfilterlist_recommended'),
    ]

    operations = [
        migrations.CreateModel(
            name='HADDNSConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='haddns_config', max_length=100, unique=True)),
                ('enabled', models.BooleanField(default=True, help_text='Enable HADDNS functionality')),
                ('handshake_threshold_seconds', models.PositiveIntegerField(default=300, help_text='Time in seconds after which a peer is considered offline (default: 5 minutes)')),
                ('update_interval_seconds', models.PositiveIntegerField(default=60, help_text='How often to check handshakes and update DNS records (default: 1 minute)')),
                ('domain_suffix', models.CharField(default='vpn.local', help_text='Domain suffix for peer hostnames (e.g., vpn.local)', max_length=100)),
                ('dynamic_hosts_file', models.CharField(default='/etc/dnsmasq.d/haddns_dynamic_hosts.conf', help_text='Path to dnsmasq dynamic hosts file', max_length=500)),
                ('include_offline_peers', models.BooleanField(default=False, help_text='Include offline peers in DNS with a special suffix (e.g., .offline)')),
                ('offline_suffix', models.CharField(default='.offline', help_text='Suffix to add to offline peer hostnames', max_length=50)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
            ],
        ),
        migrations.RemoveField(
            model_name='dnsfilterlist',
            name='host_count',
        ),
        migrations.RemoveField(
            model_name='dnsfilterlist',
            name='last_updated',
        ),
        migrations.RemoveField(
            model_name='dnsfilterlist',
            name='list_url',
        ),
        migrations.RemoveField(
            model_name='dnsfilterlist',
            name='recommended',
        ),
        migrations.AddField(
            model_name='dnsfilterlist',
            name='file_path',
            field=models.CharField(blank=True, max_length=500, null=True),
        ),
        migrations.AddField(
            model_name='statichost',
            name='description',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='statichost',
            name='enabled',
            field=models.BooleanField(default=True),
        ),
        migrations.AlterField(
            model_name='dnsfilterlist',
            name='description',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='dnsfilterlist',
            name='enabled',
            field=models.BooleanField(default=True),
        ),
        migrations.AlterField(
            model_name='dnsfilterlist',
            name='name',
            field=models.CharField(max_length=100),
        ),
        migrations.AlterField(
            model_name='statichost',
            name='ip_address',
            field=models.GenericIPAddressField(protocol='IPv4'),
        ),
        migrations.CreateModel(
            name='PeerHostnameMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hostname', models.CharField(help_text='Primary hostname for this peer', max_length=100)),
                ('custom_domain', models.CharField(blank=True, help_text='Custom domain override (optional)', max_length=100, null=True)),
                ('enabled', models.BooleanField(default=True, help_text='Enable DNS resolution for this peer')),
                ('last_handshake_check', models.DateTimeField(blank=True, null=True)),
                ('is_online', models.BooleanField(default=False, help_text='Whether peer is currently online based on handshakes')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('peer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='haddns_mapping', to='wireguard.peer')),
            ],
        ),
    ]
